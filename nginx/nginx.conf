user nginx;

worker_processes    auto;

events { worker_connections 1024; }

http {
    log_format upstream_time '$remote_addr $http_x_forwarded_for - $remote_user [$time_local] '
                             '$ssl_protocol "$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
    access_log /var/log/nginx/access.log upstream_time;

    include         /etc/nginx/proxy.conf;
    include         /etc/nginx/mime.types;
    limit_req_zone  $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens   off;

    sendfile on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    upstream web {
        server web01:8081;
	server web02:8083;
    }

    server {
        listen     *:80 default_server;
        add_header Strict-Transport-Security max-age=15768000;
        return     301 https://$host$request_uri;
    }

    server {
        listen                      443 ssl;
        server_name                 $hostname;
        ssl_certificate             /etc/nginx/certificate.crt;
        ssl_certificate_key         /etc/nginx/certificate.key;
        ssl_protocols               TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers   on;
        ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve              secp384r1;
        ssl_session_cache           shared:SSL:10m;
        ssl_session_tickets         off;
        # ssl_stapling                on; #ensure your cert is capable
        # ssl_stapling_verify         on; #ensure your cert is capable

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";

        location / {
            proxy_pass https://web;
            limit_req  zone=one burst=10 nodelay;
	    proxy_set_header X-Real-IP $remote_addr;
    	    proxy_set_header Host $host;
    	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    	    # WebSocket support
    	    proxy_http_version 1.1;
    	    proxy_set_header Upgrade $http_upgrade;
    	    proxy_set_header Connection "upgrade";
        }
    }
}